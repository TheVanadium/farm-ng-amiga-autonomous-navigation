name: Set Up Amiga App
on:
  push:
  pull_request:

jobs:
  build_frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    outputs:
      artifact-name: frontend-dist
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies (cached)
        uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

      - name: Build
        run: |
          chmod +x ./build.sh
          ./build.sh

      - name: Upload dist as artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: ts/dist

  setup_frontend:
    name: Serve & Ping Frontend
    needs: build_frontend
    runs-on: ubuntu-latest
    steps:
      - name: Download built dist
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: ts/dist

      - name: Install http-server
        run: npm install http-server

      - name: Serve build and ping
        run: |
          cd ts/dist
          npx http-server -p 8080 > /dev/null 2>&1 &
          SERVER_PID=$!
          for i in {1..10}; do
            curl --fail http://localhost:8080 && break
            sleep 1
          done || (echo "Ping failed!" && exit 1)
          kill $SERVER_PID

  setup_backend:
    name: Serve Backend
    needs: build_frontend
    runs-on: ubuntu-latest

    strategy:
      matrix:
        mode: ["", "--debug"]

    steps:
      - uses: actions/checkout@v3

      - name: Download frontend dist (if you actually need it in backend)
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: ts/dist

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.9

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}

      - name: Install packages
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install farm_ng_amiga-2.3.4-py3-none-any.whl
          pip install -r requirements.txt

      - name: Mock manifest
        run: |
          echo '{
            "services": {
              "example-app": {
                "name": "farm-ng-amiga-autonomus-navigation",
                "type": "app",
                "args": [
                  "--config /opt/farmng/config.json", "--port 8042"
                ],
                "autostart": true,
                "http_gui_port": 8042,
                "display_name": "Monitor App"
              }
            }
          }' > manifest.json

      - name: "Run backend"
        run: |
          cd backend
          source ../.venv/bin/activate
          echo "Running with flags: ${{ matrix.mode }} --config config.json"
          python3 main.py ${{ matrix.mode }} --config config.json &
          PID=$!

          for i in {1..10}; do
            curl --fail http://localhost:8042/health && break
            sleep 1
          done || (echo "Ping failed!" && exit 1)
          kill $PID
